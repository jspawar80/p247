const { Router } = require("express");
const mongo = require("./express/mongo/mongo");
const jwt = require("./express/middlewares/jwt");

const router = Router();
const route = router.route("/");

const master = mongo.collection("masterManagement");

module.exports = function (req, res, next) {
  const { filters } = req.body;
  const result = [
    {
      name: "label",
      category: "Category",
      location: "Location",
      plotNumber: "Plot Number",
      roadWidth: "Road Width",
      sizes: "Sizes",
      direction: "Direction",
      parkFacing: "Park Facing",
      corner: "Corner",
      state: "State",
      city: "City",
      offer: "Offer",
      demand: "Demand",
      file: "File",
      builtup: "Builtup",
      cheque: "Cheque",
      comments: "Comments",
      queryFrom: "Query From",
      propertyID: "Property ID",
      customerID: "Customer ID",
    },
    {
      name: "module",
      category: "properties",
      location: "properties",
      plotNumber: "properties",
      roadWidth: "properties",
      sizes: "properties",
      direction: "properties",
      parkFacing: "properties",
      corner: "properties",
      state: "properties",
      city: "properties",
      offer: "leads",
      demand: "leads",
      file: "leads",
      builtup: "leads",
      cheque: "leads",
      comments: "leads",
      queryFrom: "leads",
      propertyID: "leads",
      customerID: "leads",
    },
    {
      name: "queryComponent",
      category: "DD",
      location: "AC",
      plotNumber: "AC",
      roadWidth: "DD",
      sizes: "DD",
      direction: "DD",
      parkFacing: "CB",
      corner: "CB",
      state: "DD",
      city: "DD",
      offer: "",
      demand: "",
      file: "DD",
      builtup: "DD",
      cheque: "DD",
      comments: "TF",
      queryFrom: "DD",
      propertyID: "AC",
      customerID: "AC",
    },
    {
      name: "mutationComponent",
      category: "DD",
      location: "TF",
      plotNumber: "TF",
      roadWidth: "TF",
      sizes: "RF",
      direction: "DD",
      parkFacing: "CB",
      corner: "CB",
      state: "DD",
      city: "DD",
      offer: "TF",
      demand: "TF",
      file: "DD",
      builtup: "DD",
      cheque: "DD",
      comments: "",
      queryFrom: "DD",
      propertyID: "AC",
      customerID: "AC",
    },
    {
      name: "",
      category: "",
      location: "",
      plotNumber: "",
      roadWidth: "",
      sizes: "",
      direction: "",
      parkFacing: "",
      corner: "",
      state: "",
      city: "",
      offer: "",
      demand: "",
      file: "",
      builtup: "",
      cheque: "",
      comments: "",
      queryFrom: "",
      propertyID: "",
      customerID: "",
    },
    {
      name: "parent",
      category: "",
      location: "",
      plotNumber: "location",
      roadWidth: "location",
      sizes: "location",
      direction: "",
      parkFacing: "",
      corner: "",
      state: "",
      city: "state",
      offer: "",
      demand: "",
      file: "",
      builtup: "",
      cheque: "",
      comments: "",
      queryFrom: "",
      propertyID: "",
      customerID: "",
    },
    {
      name: "multiple",
      category: "TRUE",
      location: "TRUE",
      plotNumber: "",
      roadWidth: "TRUE",
      sizes: "TRUE",
      direction: "TRUE",
      parkFacing: "",
      corner: "",
      state: "TRUE",
      city: "TRUE",
      offer: "",
      demand: "",
      file: "",
      builtup: "",
      cheque: "",
      comments: "",
      queryFrom: "TRUE",
      propertyID: "",
      customerID: "",
    },
    {
      name: "multiline",
      category: "",
      location: "",
      plotNumber: "",
      roadWidth: "",
      sizes: "",
      direction: "",
      parkFacing: "",
      corner: "",
      state: "",
      city: "",
      offer: "",
      demand: "",
      file: "",
      builtup: "",
      cheque: "",
      comments: "TRUE",
      queryFrom: "",
      propertyID: "",
      customerID: "",
    },
  ];
  res.status(200).send(result);
};
